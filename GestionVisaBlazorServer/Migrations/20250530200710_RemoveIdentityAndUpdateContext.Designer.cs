// <auto-generated />
using System;
using GestionVisaBlazorServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionVisaBlazorServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250530200710_RemoveIdentityAndUpdateContext")]
    partial class RemoveIdentityAndUpdateContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Collaborateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnciennetéProjet")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDebutVisa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinVisa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateValiditePasseport")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collaborateurs");
                });

            modelBuilder.Entity("DemandeVisa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollaborateurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DureeVisa")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CollaborateurId");

                    b.ToTable("DemandesVisa");
                });

            modelBuilder.Entity("Deplacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CoutTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("Equipe")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Deplacements");
                });

            modelBuilder.Entity("DeplacementCollaborateur", b =>
                {
                    b.Property<int>("DeplacementId")
                        .HasColumnType("int");

                    b.Property<int>("CollaborateurId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("DeplacementId", "CollaborateurId");

                    b.HasIndex("CollaborateurId");

                    b.ToTable("DeplacementCollaborateurs");
                });

            modelBuilder.Entity("DemandeVisa", b =>
                {
                    b.HasOne("Collaborateur", "Collaborateur")
                        .WithMany("DemandesVisa")
                        .HasForeignKey("CollaborateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborateur");
                });

            modelBuilder.Entity("DeplacementCollaborateur", b =>
                {
                    b.HasOne("Collaborateur", "Collaborateur")
                        .WithMany("DeplacementCollaborateurs")
                        .HasForeignKey("CollaborateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deplacement", "Deplacement")
                        .WithMany("DeplacementCollaborateurs")
                        .HasForeignKey("DeplacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborateur");

                    b.Navigation("Deplacement");
                });

            modelBuilder.Entity("Collaborateur", b =>
                {
                    b.Navigation("DemandesVisa");

                    b.Navigation("DeplacementCollaborateurs");
                });

            modelBuilder.Entity("Deplacement", b =>
                {
                    b.Navigation("DeplacementCollaborateurs");
                });
#pragma warning restore 612, 618
        }
    }
}
